version: "3.9"

x-env: &default-env
  TZ: Asia/Dubai

networks:
  ssai:
    driver: bridge

volumes:
  pgdata: {}
  mongodata: {}
  qdrantdata: {}
  langfuse_db: {}
  ollama: {}
  models: {}

services:
  postgres:
    image: postgres:16-alpine
    environment:
      <<: *default-env
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: ssai
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 3s
      retries: 20
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ../db/init:/docker-entrypoint-initdb.d:ro
    networks: [ssai]

  mongo:
    image: mongo:7
    ports: ["27017:27017"]
    volumes:
      - mongodata:/data/db
    networks: [ssai]

  qdrant:
    image: qdrant/qdrant:latest
    ports: ["6333:6333", "6334:6334"]
    volumes:
      - qdrantdata:/qdrant/storage
    networks: [ssai]

  langfuse-db:
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: langfuse
      POSTGRES_USER: langfuse
      POSTGRES_DB: langfuse
    volumes:
      - langfuse_db:/var/lib/postgresql/data
    networks: [ssai]

  langfuse:
    image: langfuse/langfuse:latest
    depends_on:
      - langfuse-db
    environment:
      DATABASE_URL: postgres://langfuse:langfuse@langfuse-db:5432/langfuse
      NEXTAUTH_SECRET: dev-secret-change-me
      NEXTAUTH_URL: http://localhost:3100
      SALT: dev-salt
      TELEMETRY_ENABLED: "false"
    ports: ["3100:3000"]
    networks: [ssai]

  ollama:
    image: ollama/ollama:latest
    # runtime: nvidia
    environment:
      <<: *default-env
      # WE HAVE USED NVIDIA GPU - COMMENTED OUT - UNCOMMENT IF YOU HAVE NVIDIA GPU + CONTAINER TOOLKIT
      OLLAMA_KEEP_ALIVE: 2h
    volumes:
      - ollama:/root/.ollama
    ports: ["11435:11434"]
    networks: [ssai]
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]

  api:
    build:
      context: ../../
      dockerfile: apps/api/Dockerfile
    depends_on: [postgres, mongo, qdrant, ollama]
    environment:
      TZ: Asia/Dubai
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/ssai
      STORAGE_ROOT: /data/raw
      MONGO_URL: mongodb://mongo:27017
      MONGO_DB: ssai
      OLLAMA_HOST: http://ollama:11434
      OLLAMA_MODEL: llama3.2:3b
      SECRET_KEY: "dev-super-secret-change"
      ACCESS_TOKEN_EXPIRE_MIN: "60"
      MAX_UPLOAD_MB: "25"
      CORS_ALLOW_ORIGINS: "http://localhost:8501"
      QDRANT_URL: "http://qdrant:6333"
      LANGFUSE_PUBLIC_KEY: ""
      LANGFUSE_SECRET_KEY: ""
      LANGFUSE_HOST: http://langfuse:3000
      MODEL_DIR: /data/models
    volumes:
      - ../../data/raw:/data/raw
      - models:/data/models
    ports: ["8080:8080"]
    networks: [ssai]

  ui:
    build:
      context: ../../
      dockerfile: apps/ui/Dockerfile
    depends_on: [api]
    volumes:
      - ../../data/raw:/data/raw
    environment:
      TZ: Asia/Dubai
    ports: ["8501:8501"]
    networks: [ssai]
